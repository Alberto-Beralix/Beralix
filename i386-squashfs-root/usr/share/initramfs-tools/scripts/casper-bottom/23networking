#! /bin/sh

PREREQ=""
DESCRIPTION="Preconfiguring networking..."
IFFILE="/root/etc/network/interfaces"

prereqs()
{
       echo "$PREREQ"
}

case $1 in
# get pre-requisites
prereqs)
       prereqs
       exit 0
       ;;
esac

. /scripts/casper-functions

log_begin_msg "$DESCRIPTION"

if [ "${STATICIP}" = "frommedia" -a -e  "$IFFILE" ] ; then
    # will use existent /etc/network/interfaces
    log_end_msg
    exit 0
fi

cat > "$IFFILE" <<EOF
auto lo
iface lo inet loopback

EOF

/sbin/udevadm trigger
/sbin/udevadm settle

if [ -z "${NETBOOT}" -a -n "${STATICIP}" -a "${STATICIP}" != "frommedia" ]; then
    parsed=$(echo "${STATICIP}" | sed -e 's/:/ /g')
    for ifline in ${parsed}; do
        ifname="$(echo ${ifline} | cut -f1 -d ',')"
        ifaddress="$(echo ${ifline} | cut -f2 -d ',')"
        ifnetmask="$(echo ${ifline} | cut -f3 -d ',')"
        ifgateway="$(echo ${ifline} | cut -f4 -d ',')"
        cat >> "$IFFILE" <<EOF
auto ${ifname}
iface ${ifname} inet static
    address ${ifaddress}
    netmask ${ifnetmask}
    gateway ${ifgateway}

EOF
    done
else
    if [ -z "${NETBOOT}" ]; then
        # default, dhcp assigned
        method="dhcp"
    else
        # make sure that the preconfigured interface would not get reassigned by dhcp
        # on startup by ifup script - otherwise our root fs might be disconnected!
        method="manual"
    fi
    # iterate the physical interfaces and add them to the interfaces list
    if [ "$method" != dhcp ] || [ ! -x /root/usr/sbin/NetworkManager ]; then
        for interface in /sys/class/net/eth* /sys/class/net/ath* /sys/class/net/wlan*; do
            [ -e $interface ] || continue
            i="$(basename $interface)"
            cat >> "$IFFILE" <<EOF
auto $i
iface $i inet $method

EOF
        done
    fi
    if [ ! -f /root/etc/resolv.conf ] || [ -z "$(cat /root/etc/resolv.conf)" ]; then
        if [ -n "${DEVICE}" ] && [ -e /tmp/net-"${DEVICE}".conf ]; then
            # create a resolv.conf if it is not present
            cp /tmp/net-"${DEVICE}".conf /root/var/log/netboot.config
            #ipconfig quotes DNSDOMAIN, quotes need to be removed for a correct resolv.conf
            rc_search="$(sed -n 's/"//g;s/^DNSDOMAIN=//p' /tmp/net-"${DEVICE}".conf)"
            #search might contain multiple entries but domain should only have one.
            rc_domain="$(sed -n -e 's/"//g;s/^DNSDOMAIN=\([^ ]\+\) *.*/\1/p'  /tmp/net-"${DEVICE}".conf)"
            rc_server0="$(sed -n 's/^IPV4DNS0=//p' /tmp/net-"${DEVICE}".conf)"
            rc_server1="$(sed -n 's/^IPV4DNS1=//p' /tmp/net-"${DEVICE}".conf)"
            rc_server0="nameserver ${rc_server0}"
            if [ "${rc_server1}" = "0.0.0.0" ]; then
                rc_server1=""
            else
                rc_server1="nameserver ${rc_server1}"
            fi
            cat > /root/etc/resolv.conf <<EOF
# /etc/resolv.conf
# Autogenerated by casper
search ${rc_search}
domain ${rc_domain}
${rc_server0}
${rc_server1}
EOF
            cat /root/etc/resolv.conf >> /root/var/log/netboot.config
        fi
    fi
fi

if [ ! -x /root/usr/sbin/NetworkManager ]; then
    for i in eth0 eth1 eth2 ath0 wlan0; do
        grep -q "iface $i" $IFFILE && continue
        cat >> "$IFFILE" <<EOF
auto $i
iface $i inet dhcp

EOF
    done
fi

log_end_msg
